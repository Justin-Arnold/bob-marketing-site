---
const { blok } = Astro.props
---

<script>
    function flipCard(elementId:string) {

        const clonedElement = document.getElementById(`${elementId}-cloned`);
        if (clonedElement) {
            document.body.removeChild(clonedElement);
            const originalElement = document.getElementById(elementId);
            if (!originalElement) return;
            originalElement.style.visibility = 'visible';
        } else {
            const originalElement = document.getElementById(elementId);
            if (!originalElement) return;
            const newClonedElement = originalElement.cloneNode(true);
            if (!(newClonedElement instanceof HTMLElement)) return;
            newClonedElement.id = `${elementId}-cloned`;

            newClonedElement.style.position = 'fixed';
            newClonedElement.style.top = '50%';
            newClonedElement.style.left = '50%';
            newClonedElement.style.transform = 'translate(-50%, -50%)';
            newClonedElement.style.zIndex = '1000';

            document.body.appendChild(newClonedElement);

            const test = newClonedElement.querySelectorAll('.flip-card')
            setTimeout(() => {
                test[0].classList.add('flipped');
            }, 0);

            newClonedElement.addEventListener('click', function() {
                flipCard(newClonedElement.id.split('-')[0]);
            });
            //escape key
            newClonedElement.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    flipCard(newClonedElement.id.split('-')[0]);
                }
            });


            originalElement.style.visibility = 'hidden';
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        //add event listener to each card
        var cards = document.querySelectorAll('.flip-card-container');
        cards.forEach(card => {
            card.addEventListener('click', function() {
                flipCard(card.id);
            });
        });
    });
</script>

<div class="grid gap-4 grid-cols-2 sm:grid-cols-3 md:grid-cols-4">{
    blok.personnel.map((person: any) => {
        return (
            <div id={person.content.name} class="flip-card-container">
                <div class="flip-card h-full cursor-pointer hover:scale-105 grid place-items-center">
                    <div class="card card-compact bg-base-100 shadow-xl overflow-clip card-front h-full">
                        <img src={person.content.photo.filename + '/m/0x400'} class="w-full aspect-square mx-auto mb-4 object-cover" />
                        <div class="card-body text-neutral">
                        <h3 class="-mt-3 card-title text-secondary">{person.content.name}</h3>
                        <p class="-mt-3">{person.content.title}</p>
                        </div>
                    </div>
                    <span class="card card-side bg-base-100 shadow-xl overflow-clip card-back w-[400px] max-h-[600px]">
                        <div class="card-body text-neutral justify-center">
                            <div class="overflow-y-auto font-thin text-center">
                                {person.content.description}
                            </div>
                            <hr  class="my-4 opacity-40"/>
                            <figure class="max-w-screen-md mx-auto text-center flex flex-col flex-shrink-0">
                                <svg class="h-10 mx-auto text-secondary" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 14">
                                    <path d="M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z"/>
                                </svg>
                                <blockquote class="flex flex-col justify-center">
                                    <p class="italic font-medium text-neutral !flex-grow-0">
                                        {person.content.quote}
                                    </p>
                                </blockquote>
                                <figcaption class="flex items-center justify-center h-fit">
                                    <cite class="font-medium text-secondary">
                                        {person.content.quote_author}
                                    </cite>
                                </figcaption>
                            </figure>
                        </div>
                    </span>
                </div>
            </div>
        )
    })
}</div>

<style>

.flip-card-container {
    perspective: 1000px;
}

.flip-card {
    transform-style: preserve-3d;
    transition: transform 0.6s;
    position: relative;
}

.card-front,
.card-back {
    backface-visibility: hidden;
    height: 100%;
}

.card-back {
    transform: rotateY(180deg);
    position: absolute;
    top: 0;
}

body:has(.flipped)::after {
    content: "";
    display: block;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    background-color: rgba(32, 32, 32, .8);
    z-index: 2;
    pointer-events: none;
    user-select: none;
}

.flip-card.flipped {
    transform: rotateY(180deg) !important;
}

.backdrop::before {
    content:"";
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background-color: rgba(255, 255, 255, .8);
}


</style>